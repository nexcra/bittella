1. Churn
-> Sebastian
IN PROGRESS

2. Storage (per Host) + Verteilung
-> Konstantin
DONE

3. Message hierarchy
DONE

4. Operation hierarchy
-> Konstantin
DONE

5. MessageManager -> Transport (per Host)
DONE

5a. Make TransportLayer to be a fistr-class component
	* specify in config file
	* provide factory, event handler etc.
	* extend Component interface
DONE (but is created implicitly if omitted in the config file)

6. Factory hierarchy
DONE

7. Extra queue for immediate events
-> Zusammen (später)

8. Documentation (+package.html Dateien)
-> Alle

9. Ant-skript for distribution
-> Konstantin
PARTIALLY
10. Klassen, welche deprecated oder noch in Entwicklung sind - Taggen, wie? TODO, FIXME, etc.
-> ???
	a). mergen Napster and Dummy overlays
	
11. JUnit tests warten
-> alle

12. HostBuilder sollte auch mit setXY arbeiten (für Host-Generierung)
	a). hostproperties korrekt setzen
DONE
	
13. enums for Transport/NetworkProcotolcs
DONE

14. Dokumente-Verteilung global? per Host?
->???

15. Dokumentation: Package-Beschreibungen: package.html, was gehört dorthin? Lizenz? Hinweis auf KOM?
Partially DONE for api package tree

16. Revert connect/disconnect operation names back to join/leave or start/stop etc.
DONE

17. Überprüfen ob in Napster noch alles funktioniert
DONE

18. Group ID - Wie bekommt man die Infos aus dem HostBuilder in die Factorys? Eine Lösung wäre es in die 
Properties aufzunehmen?! -> Konstantin
	a). noch zu setzen in DefaultHostBuilder
DONE

19. NetworkEvent - Umstellung auf Generics / In diesem Zusammehang könnte man auch gleich Offline/Online Events
generieren, um Churn-Informationen vom NetworkLayer nach oben zu reichen
SOLVED

20. Codestyle vereinheitlichen
* rules.txt mit Regeln
	a). java code style
		** Interface, AbstractSubclass (statt base), ConcreteImpl.
		** Code-Formattierung
		** Abstract-Impl und Default-Impl in impl.<layer> package (nicht base)
DONE
	b). CVS rules
		* was gehört in .cvsignore
			** z.B. die ganzen Ausgaben (Inhalt von output bzw. outputs dirs)
			** javadoc (kann man sich immer generieren lassen)
	c). Unified class headers: author, email, date, version (currently 3.0)
	Example:
	------------
 * @author  Joseph D. Darcy
 * @version 1.69, 06/14/04
	---------------
Partially DONE (api tree)
	
21). rename handlers in listeners
DONE (except SimulationEventHandler)

22). introduce callbacks
DONE

21. Bereitstellen eines globalen Randomgenerators durch Simulator.getRandom(), der auch global benutzt werden soll
DONE

22. Erzeugen eine EmptyPayload als statische instanz
DISCARDED

23. Interface OverlayNode: Brauchen wir fail() wirklich? 
DONE

24. ConnectivityListener via HostProperties
DONE

25. Monitoring calls from Components
--> Both

26. DefaultHostBuilder refactoring
--> Konstantin
Still TODO -> Optimization possible

27. BootstrapManager ohne Interface aber als Utility-Klasse für Overlays
PARTIALY DONE

28. Dummy und Napster mergen
DONE

29. enums for the XML tags in the configurator
--> Konstantin
Still open, refactoring needed

30. OverlayMessageListener für OverlayNode (ApplicationMessage)
--> Konstantin

31. Define methods in DocumentFactory and implement an example or event a default subclass.
--> Who?

32. Timeouts handling in FileSharing and Centralized DHT -> review and test
32a. Join tests for above

Nice to have/someday:
1. bessere Doku (als pures JavaDoc) mit doxygen (erstellt eigenständig UML-Diagramme)
I'M ON MY WAY!

2. update script for the standardized file header:
	not only GPL license but also unified version? e.g. 3.0 for the current simulator?

3. Find/remove unused members and fields (and classes!)

4. Logging output for the simulator state: simulation time, real time, queue time
IN PROGRESS
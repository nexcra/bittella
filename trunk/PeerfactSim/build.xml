<?xml version="1.0" encoding="UTF-8"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
<?eclipse.ant.import?>
<project basedir="." default="build" name="PeerfactSim">
    
    <property environment="env"/>
    <property name="junit.output.dir" value="junit"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.5"/>
    <property name="source" value="1.5"/>
    <property name="distr-dir" value="distr"/>
    <property name="main-class" value="de.tud.kom.p2psim.SimulatorRunner"/>
    <property name="tests-failed" value="false"/>

	
    <path id="PeerfactSim.classpath"> 
        <pathelement location="bin"/>
        <pathelement location="../BT/bin"/>
        <pathelement location="lib/commons-math-1.1.jar"/>
        <pathelement location="lib/dom4j-1.6.1.jar"/>
        <pathelement location="lib/junit-4.0.jar"/>
        <pathelement location="lib/log4j.jar"/>
        <pathelement location="lib/ssj.jar"/>
    </path>
    
    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src" excludes="**/*.launch, **/*.java"/>
        </copy>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="test" excludes="**/*.launch, **/*.java"/>
        </copy>
    </target>

    <target name="init_bt">
        <mkdir dir="../BT/bin"/>
        <copy includeemptydirs="false" todir="../BT/bin">
            <fileset dir="../BT/src" excludes="**/*.launch, **/*.java"/>
        </copy>
        <copy includeemptydirs="false" todir="../BT/bin">
            <fileset dir="../BT/test" excludes="**/*.launch, **/*.java"/>
        </copy>
    </target>   
    
    <target name="init_btuc3m">
        <mkdir dir="../BTUC3M/bin"/>
        <copy includeemptydirs="false" todir="../BTUC3M/bin">
            <fileset dir="../BTUC3M/src" excludes="**/*.launch, **/*.java"/>
        </copy>
        <copy includeemptydirs="false" todir="../BTUC3M/bin">
            <fileset dir="../BTUC3M/test" excludes="**/*.launch, **/*.java"/>
        </copy>
    </target> 
    
    <target name="clean">
        <delete dir="bin"/>
    </target>

    <target name="clean_bt">
        <delete dir="../BT/bin"/>
    </target>

    <target name="clean_btuc3m">
        <delete dir="../BTUC3M/bin"/>
        <delete dir="../BTUC3M/UC3MLogBT.dat"/>
    </target>
    
    <target depends="clean,clean_bt,clean_btuc3m" name="cleanall"/>
    
    <target depends="build-project,build-subprojects,build-btuc3m" name="build"/>
    
    <target depends="init_bt" name="build-subprojects">
        <echo message="Building BitTorrent Implementation"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="../BT/bin" source="${source}" target="${target}">
            <src path="../BT/src"/>
            <src path="../BT/test"/>
            <src path="../BTUC3M/src"/>
            <src path="../BTUC3M/test" />
            <!--<exclude name="de/tud/kom/p2psim/util/churn/"/>-->
            <classpath refid="PeerfactSim.classpath"/>
        </javac>
    </target>
    <target depends="init_btuc3m" name="build-btuc3m">
        <echo message="Building BT UC3M Implementation" />
        <javac debug="true" debuglevel="${debuglevel}" destdir="../BTUC3M/bin" source="${source}" target="${target}">
            <src path="../BTUC3M/src"/>
            <src path="../BTUC3M/test" />
            <!--<exclude name="de/tud/kom/p2psim/util/churn/"/>-->
            <classpath refid="PeerfactSim.classpath"/>
        </javac>       
    </target>
    
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" source="${source}" target="${target}">
            <src path="src"/>
            <src path="test" />
            <!--<exclude name="de/tud/kom/p2psim/util/churn/"/>-->
            <classpath refid="PeerfactSim.classpath"/>
        </javac>
    </target>
    
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    
    <target name="AllTests" depends="build">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr" haltonerror="true" errorproperty="tests-failed" showoutput="no" filtertrace="no">
            <formatter type="xml"/>
            <test name="de.tud.kom.p2psim.AllTests" todir="${junit.output.dir}"/>
            <classpath refid="PeerfactSim.classpath"/>
        	<assertions>
        	  <enable/>
        	</assertions>
        </junit>
    	<echo>Test failed = ${tests-failed}</echo>
    </target>
    
    <target name="RunSimulator" depends="build">
	<property name="other" value=""/>
	<property name="configFile" value=""/>
	<echo message="How to run: ant -DconfigFile={configFile} -Dother=[{variable1}={value1} {variable2}={value2} ...]"/>
	<echo message="Submitted values: configFile=${configFile} and other params=${other}"/>
        <java classname="${main-class}" failonerror="true" fork="yes">
            <jvmarg line="-Xms256m -Xmx512m"/>
            <arg line="${configFile} ${other}"/>
            <classpath refid="PeerfactSim.classpath"/>
        </java>
    </target>
    
    <target name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>
    
    <target name="javadoc">
	<javadoc packagenames="de.tud.kom.p2psim.*,uc3m.netcom.peerfactsim.*"
		           sourcepath="src;test;../BT/src;../BTUC3M/src"
                           classpath="lib/log4j.jar;lib/dom4j-1.6.1.jar;lib/commons-math-1.1.jar;lib/junit-4.0.jar;lib/ssj.jar"
		           excludepackagenames="de.tud.kom.p2psim.impl.util.stat*"
		           defaultexcludes="yes"
		           destdir="docs/api"
		           author="true"
		           version="true"
		           use="true"
		           windowtitle="PeerfactSim.KOM Version 3.0 beta">
            <doctitle><![CDATA[<h1>PeerfactSim.KOM - a Large-Scale P2P Simulator</h1>]]></doctitle>
            <bottom><![CDATA[<i>Copyright &#169; 2007 Technische Universitaet Darmstadt. All Rights Reserved.</i>]]></bottom>
            <tag name="todo" scope="all" description="To do:"/>
            <group title="MAIN" packages="de.tud.kom.p2psim"/>
            <group title="API">
                <package name="de.tud.kom.p2psim.api*"/>
            </group>
            <group title="IMPLEMENTATION">
                <package name="de.tud.kom.p2psim.impl*"/>
            </group>
            <group title="BitTorrent">
                <package name="de.tud.kom.p2psim.overlay.bt*"/>
            </group>
            <group title="UC3M">
                <package name="uc3m.netcom.peerfactsim.api*" />
                <package name="uc3m.netcom.peerfactsim.impl*" />
                <package name="uc3m.netcom.peerfactsim.overlay.bt*" />
            </group>
<!--This is used for inlined links later
		    <link offline="true" href="http://java.sun.com/j2se/1.5.0/docs/api/" packagelistLoc="C:\tmp"/>
		    <link href="http://developer.java.sun.com/developer/products/xml/docs/api/"/>-->
            </javadoc>
    </target>

	<!-- ================================= 
          target: package              
         ================================= -->
    <target name="package" depends="AllTests" description="--> Prepare the simulator for distribution">
    	<property name="sim-jar" value="${distr-dir}/peerfactsim.jar"/>
    	<property name="sim-with-src" value="${distr-dir}/peerfactsim-distr-with-src.zip"/>
        <property name="sim-no-src" value="${distr-dir}/peerfactsim-distr-no-src.zip"/>
    	<property name="files-no-src" value="config/** bin/**/*.class lib/**/*.jar docs/** build.xml log4j.properties"/>
		
    	
    	<mkdir dir="${distr-dir}/lib"/>
    	<jar destfile="${sim-jar}"
	       basedir="bin"
	       includes="**/*.class"
	       excludes="**/Test.class;**/Tests.class"
	    >
    		<manifest>
    		    <attribute name="Built-By" value="${user.name}"/>
    			<attribute name="Main-Class" value="${main-class}"/>
		    </manifest>
    	</jar>
    	<delete file="${sim-with-src}"/>
    	<delete file="${sim-no-src}"/>
  	  <zip destfile="${sim-with-src}"
   	       basedir="."
   	       includes="src/**/*.java ${files-no-src}"
   	  	   update="true"
   	  />
  	  <zip destfile="${sim-no-src}"
  	       basedir="."
  	       includes="${files-no-src}"
  	  	   update="true"
  	  />

    </target>
	
	<!-- ================================= 
          target:               
         ================================= -->
    <target name="update-license" depends="build-project" description="--> Update License in all source files">
    	<!-- Run the script, which will update the GPL licence for each file -->
    	<java classname="de.tud.kom.p2psim.impl.util.UpdateLicense">
    		<classpath refid="PeerfactSim.classpath"/>
	     </java>     
    </target>

</project>

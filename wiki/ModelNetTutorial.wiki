#summary How-To set up a ModelNet environment and use it with Java Apps
#labels Phase-Deploy

<wiki:toc max_depth="3" />

= Introduction =

This is a brief tutorial on ModelNet deployment in a PCs cluster and its use to emulate P2P applications developed in Java. 

The ModelNet's emulation software runs on hosts with FreeBSD OS, hereafter we will refer to this hosts as *emulators*. Emulators support the core of the network, so to speak, routing nodes and their interconnections. Issues related with topology network generation are covered later on. On the other hand, this core is meant to interconnect edge nodes. P2P applications have their application logic fully distributed in those edge nodes and therefore no applications parties such as servers are assumed to be in the core. This _virtual_ edge nodes are refered as *virtual nodes* and the hosts were they are emulated are called *application hosts* or simply *hosts*.

The tutorial begins with a detailed description of emulators setup with FreeBSD and ModelNet. Afterwards, hosts will be configured using a Linux Ubuntu distribution and downloading ModelNet package from author's repository. Finally, some considerations about ModelNet usage involving Java and VMWare are discussed and some hints are provided in order to avoid troubles in experiments to be carried out.


= Emulators =

== FreeBSD Installation ==

ModelNet was written to run over FreeBSD 4.x kernels that are officially supported no longer. When it comes to deploy the testbed there are only two main choices, either installing 4.x or 6.x releases. By the time this tutorial is written, FreeBSD 6.3 and 7.0 are the _current_ releases of this OS. Unfortunately, as the time passes, these releases are likely to be considered as _old_ releases. ISO images for CDs of _old_ releases can be found at [ftp://ftp-archive.freebsd.org/pub/FreeBSD-Archive/old-releases/ FreeBSD-Archive] website, choose your platform and scroll down to the bottom to find the [ftp://ftp-archive.freebsd.org/pub/FreeBSD-Archive/old-releases/i386/ISO-IMAGES/ ISO-IMAGES] link, then choose your desired release number.


  * FreeBSD 4.x: This is a priori the best choice because the software was originally developed for this platform. Download the ISO image, install you OS bearing in mind that:
    # Kern-Developer configuration is enough to liven up our goals.
    # It must work as a Gateway.
    # NFS partitions are interesting since you are likely to share info among PCs.
    # Linux compatibility should be disabled to avoid compilation mistakes.
    # SSH utilities are a handful of interesting tools as well.
    # Root account is enough.
  However, using this release you are likely to need some technical support with you Gigabit Ethernet NIC because more recent devices are not recognized directly during the installation.

  * FreeBSD 6.x: Installing this kernel needs that you bear in mind the same considerations as for the 4.x release. Support for Ethernet interfaces is more extense however your ModelNet code requires certain modificaitons that are explained in Section XXXX.

===Kernel Compilation===

A modifcation of the kernel is recommended by ModelNet authors. After modifying the source files you need to recompile the kernel. This modification is not so complicated and can be carried out easily following these steps,
----
  # Go to the folder '/sys/i386/conf/'
  # Using an editor like _vi_ add the 'options  HZ=10000' line to the 'GENERIC' file.
  # Save your changes and exit the editor. Type as root 'config GENERIC'.
  # Move to the folder '../../compile/GENERIC'
  # Type as root 'make'. When the process finishes type as root 'cp kernel /' to deploy the new compiled kernel.
  # Reboot your system to make the changes available.
----

You can check that your changes have made effect by typing,
{{{
sysctl kern.clockrate
}}}

===Required Software===

ModelNet requires some additional packages to run properly. Most of these packages can be fetched from the FreeBSD-Archive repository, some other need to be compiled and installed from source code. 

Once the system is running, since 4.x is and old-release (so is likely to be 6.x in a few months), the repository environment variable must be modified to point to the release repository, otherwise system will try to install packages from the _current_ release leading to version conflicts. This can be done by executing as root,
{{{
setenv PACKAGESITE ftp://ftp-archive.freebsd.org/pub/FreeBSD-Archive/ports/i386/packages-4.8-release/Latest/
}}}

Where _i386_ can be replaced by your PC architecture (i.e. amd64, sparc, etc.) and digits _4.8_ can be replace by another release, for instance _6.2_. Now we can install packages via repository for the chosen release. Type the following commands in your terminal (Note: if you get a weird _command not found_ message try to _whereis_ your command, sometimes FreeBSD fails to set the PATH variable).
{{{
pkg_add -r wget gmake bash
pkg_add -r perl sudo
pkg_add -r p5-XML-Simple linuxthreads libgnugetopt boost xerces-c2
cpan install XML::Simple
}}}

Now, if you chose release _4.x_ you can install the _perl Graph_ library from the repository using the following command (Note: It is advisable that you compile it from source code)
{{{
pkg_add -r Graph
}}}

Nevertheless, if your choice was _6.x_ or you are keen on compiling your libraries from source, you need the _Graph-0.20105.tar.gz_ and _Heap-0.80.tar.gz_ tarballs. They can be fetched from the local copy hosted at this project site under the tab _Downloads_ or you can look them up through the [http://www.cpan.org// CPAN site] or the perl packages [http://search.cpan.org searcher]. ATTENTION: Newer releases of the packages higher than 0.20105 will not work with ModelNet. Install the packages by typing,
{{{
tar -xvzf Graph-0.20105.tar.gz
tar -xvzf Heap-0.80.tar.gz
cd Heap-0.80
perl Makefile.PL
gmake
gmake install
cd ../Graph-0.20105
perl Makefile.PL
gmake
gmake install
}}}

So far we have seen how to install the required packages to run ModelNet. Additional tools can be useful for you such as the Authd and Gexec tools. Former provides cluster-wide authentication by generating and distributing public key among cluster hosts, latter allows administrators and users to run commands remotely on cluster hosts (i.e. you can run a command in every machine in the cluster at once or specify which hosts will execute the command from a single computer). The _'libe'_ package must be installed first, it can be found in the repositories and fetched using _pkg__add_ command. Authd and Gexec source code and instructions can be found at [http://www.theether.org/authd/ AUTHD site] and [http://www.theether.org/gexec/ GEXEC site] respectively. Do not forget to run the Audthd and Gexec deamons at the host you choose as a server.

==Installing using 4.x releases==

Download the source code either from the _Downloads_ tab of this project or from authors repository by typing,
{{{
wget http://sysnet.ucsd.edu/modelnet/modelnet-0.99.tar.gz
}}}

Compile and install the code folling these instructions,
{{{
tar -xvzf modelnet-0.99.tar.gz
cd modelnet-0.99
mkdir freebsd
cd freebsd
../configure -with-fbsdsys=/sys/
gmake
gmake install
}}}

Depending on your OS installation additional packages such as _gcc_ might be required by the _configure_ command. The option _-with-fbsdsys_ is used in case that you want to compile _modelnet.ko_ kernel module with your current kernel sources, but you can skip it and use the already built module.

==Installing using 6.x releases==

Two patches can be found along the web to compile and run ModelNet on 6.x releases. At ModelNet site you can find easily a patch file and apply it to the source code, then compile the sources as depicted in the previous section.

A valuable alternative to this patch is the source modification that can be found at the _EVERGROW_ project web site. There you can download the file _src.tar.gz_ (also available through the Downloads tab). Apply the patch as follows,
{{{
tar -xvzf modelnet-0.99.tar.gz
tar -xvzf src.tar.gz
rm -rf ./modelnet-0.99/module/*
cp ./src/* ./modelnet-0.99/module/
cd modelnet-0.99
mkdir freebsd
cd freebsd

../configure [-with-fbsdsys=/sys/]
gmake
gmake install
}}}

Depending on your OS installation you may get two compilation error at the '_libipaddr.c_' file at lines 960 and 1012. These are due to some versioning issues of the _unistd.h_ and _netbd.h_ libraries, both featured by the OS kernel. _libipaddr.c_ library is crucial at _hosts_, yet it is not used at the server because 23rd bit in the IP address does not have to be fliped at the emulator, so has to be at the host to avoid packets to go through the local loop. Therefore, if we carry out the following steps to avoid compilation errors, we can be sure at the same time that our modification will not affect the emulator operation,
  # Go to the folder ./modelnet-0.99/src/, there is you libipaddr.c file.
  # Backup you libipaddr.c file (i.e. copy it to libipaddr.c.backup).
  # Go to line 960 and change the first argument of the _gethostbyaddr()_ function type from _char1!*_ to _void!*_
  # Go to line 1012 and comment the whole _gethostbyaddr()_ function.
  # Save your changes
  # Run again the _configure, gmake_ and _gmake install_ instructions.



=Hosts=

==Ubuntu Installation==

=Setting Up the Cluster=

=Running a Simple Example: Testing your Setup=

=Running a More Complex Example=

=Running Java Applications on ModelNet=

=Virtual Clustering using VMWare=
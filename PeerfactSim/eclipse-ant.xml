<?xml version="1.0" encoding="UTF-8"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
<project basedir="." default="build" name="PeerfactSim">
    <property environment="env"/>
    <property name="Esen_BA_Pastry.location" value="../Esen_BA_Pastry"/>
    <property name="Tobias_Busse_DA.location" value="../Tobias_Busse_DA"/>
    <property name="junit.output.dir" value="junit"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.5"/>
    <property name="source" value="1.5"/>
    <path id="PeerfactSim.classpath">
        <pathelement location="bin"/>
        <pathelement location="lib/commons-math-1.1.jar"/>
        <pathelement location="lib/dom4j-1.6.1.jar"/>
        <pathelement location="lib/junit-4.0.jar"/>
        <pathelement location="lib/log4j.jar"/>
        <pathelement location="lib/ssj.jar"/>
    </path>
    <path id="run.[Scrapbook] TestSyntax.jpage.classpath">
        <pathelement location="C:/install/eclipse/configuration/org.eclipse.osgi/bundles/42/1/.cp/snippetsupport.jar"/>
    </path>
    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src" excludes="**/*.launch, **/*.java"/>
        </copy>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="test" excludes="**/*.launch, **/*.java"/>
        </copy>
    </target>
    <target name="clean">
        <delete dir="bin"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" source="${source}" target="${target}">
            <src path="src"/>
            <classpath refid="PeerfactSim.classpath"/>
        </javac>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" source="${source}" target="${target}">
            <src path="test"/>
            <classpath refid="PeerfactSim.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects">
        <ant antfile="${Esen_BA_Pastry.location}/eclipse-ant.xml" inheritAll="false" target="clean"/>
        <ant antfile="${Esen_BA_Pastry.location}/eclipse-ant.xml" inheritAll="false" target="build"/>
        <ant antfile="${Tobias_Busse_DA.location}/eclipse-ant.xml" inheritAll="false" target="clean"/>
        <ant antfile="${Tobias_Busse_DA.location}/eclipse-ant.xml" inheritAll="false" target="build"/>
    </target>
    <target name="AddLicence">
        <java classname="de.tud.kom.p2psim.util.AddLicence" failonerror="true" fork="yes">
            <classpath refid="PeerfactSim.classpath"/>
        </java>
    </target>
    <target name="AllTests (2)">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="de.tud.kom.p2psim.AllTests" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="PeerfactSim.classpath"/>
        </junit>
    </target>
    <target name="CentralizedTest (1)">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="de.tud.kom.p2psim.impl.overlay.dht.centralized.CentralizedTest" todir="${junit.output.dir}"/>
            <classpath refid="PeerfactSim.classpath"/>
        </junit>
    </target>
    <target name="CentralizedTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="de.tud.kom.p2psim.impl.overlay.dht.CentralizedTest" todir="${junit.output.dir}"/>
            <classpath refid="PeerfactSim.classpath"/>
        </junit>
    </target>
    <target name="ConfigurationFileTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="de.tud.kom.p2psim.impl.scenario.ConfigurationFileTest" todir="${junit.output.dir}"/>
            <classpath refid="PeerfactSim.classpath"/>
        </junit>
    </target>
    <target name="ConfiguratorTest (1)">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="de.tud.kom.p2psim.util.ConfiguratorTest" todir="${junit.output.dir}"/>
            <classpath refid="PeerfactSim.classpath"/>
        </junit>
    </target>
    <target name="ConfiguratorTest.testChurn">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="de.tud.kom.p2psim.util.ConfiguratorTest" todir="${junit.output.dir}"/>
            <classpath refid="PeerfactSim.classpath"/>
        </junit>
    </target>
    <target name="ConfiguratorTest.testHostProperties">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="de.tud.kom.p2psim.util.ConfiguratorTest" todir="${junit.output.dir}"/>
            <classpath refid="PeerfactSim.classpath"/>
        </junit>
    </target>
    <target name="ContentDistributionTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="de.tud.kom.p2psim.impl.overlay.cd.ContentDistributionTest" todir="${junit.output.dir}"/>
            <classpath refid="PeerfactSim.classpath"/>
        </junit>
    </target>
    <target name="DefaultScenarioTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="de.tud.kom.p2psim.impl.scenario.DefaultScenarioTest" todir="${junit.output.dir}"/>
            <classpath refid="PeerfactSim.classpath"/>
        </junit>
    </target>
    <target name="DefaultSimulator churn-test.xml">
        <java classname="de.tud.kom.p2psim.impl.simengine.DefaultSimulator" failonerror="true" fork="yes">
            <jvmarg line="-ea"/>
            <arg line="config/churn-test.xml"/>
            <classpath refid="PeerfactSim.classpath"/>
        </java>
    </target>
    <target name="DefaultSimulator dummy.xml">
        <java classname="de.tud.kom.p2psim.impl.simengine.DefaultSimulator" failonerror="true" fork="yes">
            <jvmarg line="-ea"/>
            <arg line="config/dummy.xml"/>
            <classpath refid="PeerfactSim.classpath"/>
        </java>
    </target>
    <target name="DefaultSimulator napster.xml">
        <java classname="de.tud.kom.p2psim.impl.simengine.DefaultSimulator" failonerror="true" fork="yes">
            <jvmarg line="-ea"/>
            <arg line="config/napster.xml seed=111"/>
            <classpath refid="PeerfactSim.classpath"/>
        </java>
    </target>
    <target name="DefaultSimulator network-only.xml">
        <java classname="de.tud.kom.p2psim.impl.simengine.DefaultSimulator" failonerror="true" fork="yes">
            <jvmarg line="-ea"/>
            <arg line="config/network-only.xml"/>
            <classpath refid="PeerfactSim.classpath"/>
        </java>
    </target>
    <target name="DefaultSimulator ping_pong.xml">
        <java classname="de.tud.kom.p2psim.impl.simengine.DefaultSimulator" failonerror="true" fork="yes">
            <jvmarg line="-ea"/>
            <arg line="config/ping_pong.xml"/>
            <classpath refid="PeerfactSim.classpath"/>
        </java>
    </target>
    <target name="ModuleTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="de.tud.kom.p2psim.ModuleTest" todir="${junit.output.dir}"/>
            <classpath refid="PeerfactSim.classpath"/>
        </junit>
    </target>
    <target name="NapsterTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="de.tud.kom.p2psim.impl.application.filesharing.NapsterTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="PeerfactSim.classpath"/>
        </junit>
    </target>
    <target name="NapsterTest.testDownloadExisting">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="de.tud.kom.p2psim.impl.application.filesharing.NapsterTest" todir="${junit.output.dir}"/>
            <classpath refid="PeerfactSim.classpath"/>
        </junit>
    </target>
    <target name="SchedulerSingletonTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="de.tud.kom.p2psim.impl.simengine.SchedulerSingletonTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="PeerfactSim.classpath"/>
        </junit>
    </target>
    <target name="UpdateLicense All src folders">
        <java classname="de.tud.kom.p2psim.util.UpdateLicense" failonerror="true" fork="yes">
            <arg line="src test src_tentative test_tentative"/>
            <classpath refid="PeerfactSim.classpath"/>
        </java>
    </target>
    <target name="[Scrapbook] TestSyntax.jpage">
        <java classname="org.eclipse.jdt.internal.debug.ui.snippeteditor.ScrapbookMain" failonerror="true" fork="yes">
            <arg line=" file:/H:/Eigene+Dateien/Eclipse/workspace/.metadata/.plugins/org.eclipse.core.resources/.projects/PeerfactSim/org.eclipse.jdt.debug.ui/ file:/H:/Eigene+Dateien/Eclipse/workspace/PeerfactSim/bin_tentative/ file:/H:/Eigene+Dateien/Eclipse/workspace/PeerfactSim/bin_tentative/ file:/H:/Eigene+Dateien/Eclipse/workspace/PeerfactSim/bin/ file:/H:/Eigene+Dateien/Eclipse/workspace/PeerfactSim/lib/commons-math-1.1.jar file:/H:/Eigene+Dateien/Eclipse/workspace/PeerfactSim/lib/dom4j-1.6.1.jar file:/H:/Eigene+Dateien/Eclipse/workspace/PeerfactSim/lib/junit-4.0.jar file:/H:/Eigene+Dateien/Eclipse/workspace/PeerfactSim/lib/log4j.jar file:/H:/Eigene+Dateien/Eclipse/workspace/PeerfactSim/lib/ssj.jar"/>
            <classpath refid="run.[Scrapbook] TestSyntax.jpage.classpath"/>
        </java>
    </target>
    <target name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>
</project>
